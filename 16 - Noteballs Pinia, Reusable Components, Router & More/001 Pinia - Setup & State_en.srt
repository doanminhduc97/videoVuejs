1
00:00:01,780 --> 00:00:07,660
I think now's a good time to add state management to our app using peneha on generally speaking.

2
00:00:08,050 --> 00:00:12,970
If you're going to add state management to your app, the earlier the better because adding state management

3
00:00:12,970 --> 00:00:16,760
to an app which is already really complicated, can bring a lot of headaches.

4
00:00:16,780 --> 00:00:21,430
But this time we're going to install Peneha from scratch and set it all from scratch because we didn't

5
00:00:21,430 --> 00:00:24,130
choose to add it to our project automatically.

6
00:00:24,640 --> 00:00:26,620
So let's just Google Kenya.

7
00:00:28,200 --> 00:00:30,000
On July two, the penny a website.

8
00:00:30,360 --> 00:00:33,720
I get started and I'm going to jump to getting started.

9
00:00:34,980 --> 00:00:37,110
So first of all, we need to install it.

10
00:00:38,310 --> 00:00:39,720
With AMPM, our yard.

11
00:00:39,720 --> 00:00:44,040
I'm going to use AMPM, so we need to jump to our terminal.

12
00:00:45,410 --> 00:00:51,740
Kill the deaf process with control see and run ampm install pioneer.

13
00:00:55,920 --> 00:00:56,730
That's installed.

14
00:00:56,760 --> 00:00:59,730
So let's launch our app again with NPM run dev.

15
00:01:01,660 --> 00:01:02,620
Just close the terminal.

16
00:01:03,970 --> 00:01:09,430
And the next thing we need to do is create a PTA, the root store, and pass it to the app.

17
00:01:09,970 --> 00:01:11,410
So we do this in May not.

18
00:01:11,410 --> 00:01:16,480
J.S. So I'll open up the Explorer and go to Source and Main.

19
00:01:16,850 --> 00:01:17,200
Yes.

20
00:01:18,400 --> 00:01:21,670
So first we need to import create Petya from Penta.

21
00:01:21,850 --> 00:01:27,130
So I'll copy this line and I'll paste it after this import create up from view line.

22
00:01:27,790 --> 00:01:33,940
I start in there and now we just need to trigger the use method on our app and then trigger this create

23
00:01:34,060 --> 00:01:35,200
any method within that.

24
00:01:35,770 --> 00:01:41,890
So after this create outline, I'm just going to add don't use parentheses.

25
00:01:42,460 --> 00:01:46,540
And then within that I'm just going to put create a parentheses.

26
00:01:47,900 --> 00:01:48,650
Let's save that.

27
00:01:48,650 --> 00:01:50,120
Make sure we don't have any errors.

28
00:01:51,210 --> 00:01:54,140
So reload the app now.

29
00:01:54,200 --> 00:01:54,920
There's no errors.

30
00:01:55,400 --> 00:01:57,620
So now we need to create a penny store.

31
00:01:57,740 --> 00:02:02,870
I'm going to jump back to the penny side and I'm going to jump backwards to what is Penny A?

32
00:02:05,010 --> 00:02:05,670
On July two.

33
00:02:05,670 --> 00:02:12,630
Basic example, and it gives us a basic example here, and you can put your pennies store files wherever

34
00:02:12,630 --> 00:02:13,260
you want to.

35
00:02:13,710 --> 00:02:16,800
Well, they seem to recommend putting them in this stores folder.

36
00:02:17,850 --> 00:02:26,910
So let's create a new folder in the source folder called Stores and we'll create our still filed here.

37
00:02:28,020 --> 00:02:29,800
And you can call this whatever you like.

38
00:02:29,980 --> 00:02:38,130
I'm going to call it store notes, because this is a store for our notes and all related methods to

39
00:02:38,130 --> 00:02:38,790
those notes.

40
00:02:39,810 --> 00:02:43,320
And I'm just going to copy code of this basic example.

41
00:02:43,950 --> 00:02:44,790
Paste that in here.

42
00:02:46,290 --> 00:02:52,350
So all this is basically doing is using this define stall method to set up our store and we put all

43
00:02:52,350 --> 00:02:54,780
of our state actions and guesses in here.

44
00:02:55,440 --> 00:03:02,550
And then we're just assigning that store to this constant and exporting it to make it available to any

45
00:03:02,550 --> 00:03:03,720
components in our app.

46
00:03:04,440 --> 00:03:07,770
So let's give this constant name a more meaningful name.

47
00:03:08,100 --> 00:03:11,220
So we could call this use store notes.

48
00:03:12,120 --> 00:03:14,870
And also let's get this name here, a more meaningful name.

49
00:03:14,880 --> 00:03:17,040
We could call this store notes.

50
00:03:17,460 --> 00:03:24,300
For now, let's remove this actions object on these two comments and we'll just focus on the state.

51
00:03:24,510 --> 00:03:28,560
To begin with, let's put this onto multiple lines.

52
00:03:29,400 --> 00:03:31,920
And now we can copy our notes right into.

53
00:03:32,990 --> 00:03:41,510
The state in this store so close may not jazz and I'm jump to view notes top view where we currently

54
00:03:41,510 --> 00:03:42,710
have our notes array here.

55
00:03:44,210 --> 00:03:47,630
I'm just going to copy the two objects inside this array for now.

56
00:03:47,660 --> 00:03:48,470
Copy those.

57
00:03:49,160 --> 00:03:50,510
Jump back to store notes.

58
00:03:50,510 --> 00:03:51,200
Such as?

59
00:03:52,520 --> 00:03:54,380
We'll set up a property called Notes.

60
00:03:55,530 --> 00:04:00,530
Set that equal to an array and we'll just paste those notes.

61
00:04:02,310 --> 00:04:03,600
Into this notes array.

62
00:04:04,230 --> 00:04:04,830
Save that.

63
00:04:05,930 --> 00:04:11,480
And we should now be able to import this store into any of our components where they can get access

64
00:04:11,480 --> 00:04:15,770
to this notes array, which is in our state in this store.

65
00:04:16,160 --> 00:04:19,130
Remember, the state is only for storing data.

