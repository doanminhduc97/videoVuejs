1
00:00:01,100 --> 00:00:07,310
Let's set up an action in our opinion store for deleting a note and our delete button is in a note component

2
00:00:07,310 --> 00:00:10,040
and components notes a note dot view.

3
00:00:12,090 --> 00:00:15,810
So let's see what's happening right now with this delete functionality.

4
00:00:16,440 --> 00:00:22,110
So on this delete button here we have this click handler which is going to fire this local method handle

5
00:00:22,110 --> 00:00:22,890
delete clicked.

6
00:00:25,670 --> 00:00:26,810
And that method is here.

7
00:00:26,900 --> 00:00:32,570
And then inside that we're emitting a custom event called Daily Clicked on passing in the ID of the

8
00:00:32,570 --> 00:00:34,220
notes that we want to delete.

9
00:00:34,310 --> 00:00:38,930
Then in the parent component, view notes that view to scroll up to the notes component.

10
00:00:38,960 --> 00:00:44,550
We're listening out for this custom event when we receive it with triggering this delete note method.

11
00:00:45,920 --> 00:00:51,770
And with that removing the note from the array based on this ID that we're passing it and this local

12
00:00:51,770 --> 00:00:52,130
notes.

13
00:00:52,130 --> 00:00:52,430
Right.

14
00:00:52,430 --> 00:00:53,630
No longer exists here.

15
00:00:53,720 --> 00:00:55,670
So this is not going to work anyway at the moment.

16
00:00:55,820 --> 00:01:01,250
But anyway, once we start using state management in our app, whether it's through composable view

17
00:01:01,610 --> 00:01:07,520
or any other like we're using, we don't need to worry about imitating custom events from child components

18
00:01:07,520 --> 00:01:14,200
to parent components, and then listening out for those events before we trigger a method.

19
00:01:14,210 --> 00:01:19,550
Because remember, all of the components of our app, no matter how deeply nested they are, have access

20
00:01:19,550 --> 00:01:24,560
to everything that's in store, including everything in our state and all of our actions.

21
00:01:24,740 --> 00:01:30,770
So let's set up a new delete note action in our store and trigger it directly in note dot view without

22
00:01:30,770 --> 00:01:34,610
needing to emit any custom events or listen out for those events.

23
00:01:34,670 --> 00:01:36,470
Okay, so let's jump to store notes.

24
00:01:37,550 --> 00:01:44,540
And I'll just collapse this add note action at a comma and add a new action called delete notes in order

25
00:01:44,540 --> 00:01:46,450
to delete the note from notes.

26
00:01:46,520 --> 00:01:46,730
Right.

27
00:01:46,730 --> 00:01:48,530
In our state, we're going to need the ID date.

28
00:01:48,620 --> 00:01:53,330
So we'll set this up to receive the ID eight with a variable called ID to delete.

29
00:01:54,920 --> 00:01:57,770
I will just log out id to delete as well.

30
00:01:58,130 --> 00:02:01,760
I need to delete and save that.

31
00:02:01,910 --> 00:02:03,530
Now back in note dot view.

32
00:02:04,280 --> 00:02:09,740
Instead of triggering this local method handle delete clicked when this delete button is clicked.

33
00:02:09,919 --> 00:02:16,100
Let's import our opinion store here and trigger this new action delete note directly instead.

34
00:02:16,430 --> 00:02:18,040
So I'm going to jump to view notes.

35
00:02:18,040 --> 00:02:24,950
Start view copy this line where we're importing store, paste that at the top of note dot view that

36
00:02:24,950 --> 00:02:31,040
we need to get access to our store like we did on the stock view by assigning our store to a constant.

37
00:02:31,220 --> 00:02:36,800
So I'm going to copy this comment on the code as well from view notes dot view and we'll paste that

38
00:02:36,830 --> 00:02:42,410
after our props on limits and we now have access to our store in this note dot view component.

39
00:02:43,040 --> 00:02:48,230
So we can now jump to this delete button, trigger this delete note action directly.

40
00:02:48,530 --> 00:02:53,810
So we'll get rid of this handled really clicked message call and instead we'll just do store notes,

41
00:02:54,200 --> 00:02:56,090
dot delete note.

42
00:02:56,240 --> 00:03:02,690
Now we need to pass in the note ID and remember we're passing down the notes object with a prop here.

43
00:03:03,050 --> 00:03:04,910
So our note ID is available.

44
00:03:05,210 --> 00:03:14,690
Props notes ID or just notes ID if we're in the template so we can just pass in notes the ID save that

45
00:03:14,750 --> 00:03:19,000
and hopefully our action delete note should be receiving the ID and logging its out.

46
00:03:19,010 --> 00:03:20,480
So let's see if that's working.

47
00:03:21,260 --> 00:03:22,400
Click on the delete button.

48
00:03:22,430 --> 00:03:27,800
When we see ID one being locked out, click on the other delete button and we see ID to be and logged

49
00:03:27,800 --> 00:03:28,070
out.

50
00:03:28,790 --> 00:03:35,540
Now let's jump back to note dot view and do some tidying up because we no longer need this handled delete

51
00:03:35,540 --> 00:03:36,380
click method.

52
00:03:36,380 --> 00:03:44,690
We're not using it anymore and we also no longer need to define delete clicked as an omits because we're

53
00:03:44,690 --> 00:03:45,950
no longer omitting that.

54
00:03:45,980 --> 00:03:50,300
So we can just remove our omits code and the comment entirely, save that.

55
00:03:50,300 --> 00:03:53,900
And if we want to view notes that view, scroll up to the note component.

56
00:03:54,500 --> 00:03:57,530
We no longer need to listen out for this DeLay Clicks event.

57
00:03:57,530 --> 00:04:03,530
We're no longer emitting it from note dot view, so we can remove that as well, save that and if we

58
00:04:03,530 --> 00:04:07,730
scroll down here, we're now no longer firing this delete note method.

59
00:04:07,880 --> 00:04:13,610
So I'm just going to copy the code from inside this method and then just delete this method on the comment

60
00:04:13,610 --> 00:04:14,090
as well.

61
00:04:14,810 --> 00:04:15,580
Save that.

62
00:04:15,590 --> 00:04:21,380
Now let's jump to store notes as I will paste this code into this delete note method.

63
00:04:22,160 --> 00:04:24,230
We just need to adjust this a little bit.

64
00:04:25,330 --> 00:04:30,910
So we're no longer going to filter notes to value and then assign that filter to write back to notes

65
00:04:30,910 --> 00:04:31,560
the value.

66
00:04:31,570 --> 00:04:34,570
We now want to do that with this notes array that's in our state.

67
00:04:35,470 --> 00:04:40,520
So again, we can just replace this notes dot value or select both of these by holding now alt.

68
00:04:40,540 --> 00:04:42,820
Instead we can just do this dot notes.

69
00:04:43,600 --> 00:04:49,660
So this is going to grab the entire notes array and filter it based on the criteria in here.

70
00:04:49,750 --> 00:04:55,180
And it's going to return all of the notes where the note ID is not equal to the ID that we're passing

71
00:04:55,180 --> 00:04:58,090
in here and these variable names are still the same.

72
00:04:58,330 --> 00:05:00,550
So I don't think we need to make any more changes.

73
00:05:00,850 --> 00:05:03,070
So let's save that and we'll see if this is working.

74
00:05:03,130 --> 00:05:07,210
So I'll reload, click on a delete button and we can see the note is deleted.

75
00:05:07,240 --> 00:05:10,480
And we also see that object removed in our Def tools as well.

76
00:05:10,810 --> 00:05:14,620
And if I delete this one, we now see an empty right in our def tools.

